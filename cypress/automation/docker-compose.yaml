version: "3"
services:
  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: obgs
    ports:
      - 5432:5432
    networks:
      - e2e
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2022-09-17T00-09-45Z
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - e2e
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data

  migrate:
    image: ghcr.io/open-boardgame-stats/backend-migrations:sha-d68b45f
    command: migrate apply -u postgresql://postgres:postgres@postgres:5432/obgs?sslmode=disable
    networks:
      - e2e
    depends_on:
      postgres:
        condition: service_healthy

  seed:
    image: ghcr.io/open-boardgame-stats/backend:sha-87ef017
    volumes:
      - ./.backend.yaml:/.backend.yaml
    networks:
      - e2e
    command: backend seed
    depends_on:
      migrate:
        condition: service_completed_successfully

  backend:
    image: ghcr.io/open-boardgame-stats/backend:sha-87ef017
    volumes:
      - ./.backend.yaml:/.backend.yaml
    ports:
      - 8080:8080
    networks:
      - e2e
    command: backend server
    depends_on:
      seed:
        condition: service_completed_successfully

  frontend:
    build: ../..
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8080
    ports:
      - 3000:3000
    networks:
      - e2e
    command: pnpm dev
    depends_on:
      backend:
        condition: service_started

  cypress:
    image: cypress/included:12.5.1
    volumes:
      - ../../cypress:/cypress
      - ./cypress.config.js:/cypress.config.js
      - ../../cypress/videos:/cypress/videos
      - ../../cypress/screenshots:/cypress/screenshots
    command: "--browser chrome"
    networks:
      - e2e
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started

volumes:
  minio-data:

networks:
  e2e:
